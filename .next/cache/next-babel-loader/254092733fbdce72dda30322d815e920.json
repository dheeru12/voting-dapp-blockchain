{"ast":null,"code":"var _jsxFileName = \"/home/dheeru12/projects/voting/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport web3 from '../web3';\nimport { Card, Button } from 'semantic-ui-react';\nimport voting from '../Voting';\nimport Layout from '../components/Layout';\n\nclass votingComponent extends Component {\n  static async getInitialProps() {\n    const candidates = await voting.methods.returnNames().call();\n    return {\n      candidates: candidates\n    };\n  }\n\n  renderCandidates() {\n    let candidatecount = 0;\n    const items = this.props.candidates.map(address => {\n      return {\n        header: address,\n        description: __jsx(\"a\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 29\n          }\n        }, \"view Candidate\"),\n        meta: \"candidate no:\" + candidatecount++,\n        fluid: true\n      };\n    });\n    return items;\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }, \"Candidates participating\"), __jsx(Button, {\n      floated: \"right\",\n      content: \"create candidate\",\n      icon: \"add circle\",\n      primary: true,\n      href: \"/candidates/new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }), __jsx(Card.Group, {\n      items: this.renderCandidates(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    }));\n  }\n\n}\n\nexport default votingComponent;","map":{"version":3,"sources":["/home/dheeru12/projects/voting/pages/index.js"],"names":["React","Component","web3","Card","Button","voting","Layout","votingComponent","getInitialProps","candidates","methods","returnNames","call","renderCandidates","candidatecount","items","props","map","address","header","description","meta","fluid","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAAQC,IAAR,EAAcC,MAAd,QAA2B,mBAA3B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AACA,MAAMC,eAAN,SAA8BN,SAA9B,CAAuC;AACnC,eAAaO,eAAb,GAA8B;AAC1B,UAAMC,UAAU,GAAC,MAAMJ,MAAM,CAACK,OAAP,CAAeC,WAAf,GAA6BC,IAA7B,EAAvB;AACA,WAAO;AAACH,MAAAA,UAAU,EAACA;AAAZ,KAAP;AACH;;AACDI,EAAAA,gBAAgB,GAAE;AACd,QAAIC,cAAc,GAAC,CAAnB;AACA,UAAMC,KAAK,GAAC,KAAKC,KAAL,CAAWP,UAAX,CAAsBQ,GAAtB,CAA0BC,OAAO,IAAE;AAC3C,aAAO;AACHC,QAAAA,MAAM,EAAED,OADL;AAEHE,QAAAA,WAAW,EAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFT;AAGHC,QAAAA,IAAI,EAAC,kBAAiBP,cAAc,EAHjC;AAIHQ,QAAAA,KAAK,EAAC;AAJH,OAAP;AAMH,KAPW,CAAZ;AASA,WAAOP,KAAP;AACH;;AACDQ,EAAAA,MAAM,GAAE;AACJ,WACQ,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,EAEI,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,OAAhB;AAAwB,MAAA,OAAO,EAAC,kBAAhC;AAAmD,MAAA,IAAI,EAAC,YAAxD;AAAqE,MAAA,OAAO,MAA5E;AAA6E,MAAA,IAAI,EAAC,iBAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE,KAAKV,gBAAL,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADR;AAQH;;AA3BkC;;AA8BvC,eAAeN,eAAf","sourcesContent":["import React, { Component } from 'react';\nimport web3 from '../web3';\nimport {Card, Button} from 'semantic-ui-react';\nimport voting from '../Voting';\nimport Layout from '../components/Layout'\nclass votingComponent extends Component{\n    static async getInitialProps(){\n        const candidates=await voting.methods.returnNames().call();\n        return {candidates:candidates}\n    }\n    renderCandidates(){\n        let candidatecount=0\n        const items=this.props.candidates.map(address=>{\n            return {\n                header: address,\n                description:<a>view Candidate</a>,\n                meta:\"candidate no:\"+(candidatecount++),\n                fluid:true\n            };\n        });\n\n        return items;\n    }\n    render(){\n        return (\n                <Layout>\n                    <h4>Candidates participating</h4>\n                    <Button floated=\"right\" content=\"create candidate\" icon=\"add circle\" primary href='/candidates/new'></Button>\n                    <Card.Group items={this.renderCandidates()} />\n                </Layout>\n\n        );\n    }\n}\n\nexport default votingComponent;"]},"metadata":{},"sourceType":"module"}